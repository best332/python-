import re#处理字符串的模块
import tkinter
import tkinter.messagebox
import math
 
#按钮操作，点击按钮后需要做的处理
def buttonClik(btn):
    content=contentVar.get()#获取文本框中的内容
    #如果已有内容是以小数点开头的，在前面加0
    if content.startswith('.'):
        content='0'+content#字符串可以直接用+来增加字符
    if btn in '0123456789':
        content+=btn
    elif btn=='.':
        lastPart=re.split(r'\+|-|\*|/',content)[-1]#将content从+-*/这些字符的地方分割开来
        if '.'in lastPart:
            tkinter.messagebox.showerror('错误','重复出现的小数点')
            return
        else:
            content+=btn
    elif btn=='C':
        content=''#清除文本框
    elif btn=='=':
        try:
            #对输入的表达式求值
            content=str(eval(content))
        except:
            tkinter.messagebox.showerror('错误','表达式有误')
            return
    elif btn in operators:
        if content.endswith(operators):#如果content中最后出现的+-*/
            tkinter.messagebox.showerror('错误','不允许存在连续运算符')
            return
        content+=btn
    elif btn=='sin':
         n=content.split('.')#从.处分割存入n，n是一个列表
         if all(map(lambda x:x.isdigit(),n)):
            content=math.sin(float(content)*math.pi/180)
         else:
            tkinter.messagebox.showerror('错误','表达式错误')
            return 
    elif btn=='a!':
         n=content.split('.')#从.处分割存入n，n是一个列表
         if all(map(lambda x:x.isdigit(),n)):
            content=math.factorial(int(content))
         else:
            tkinter.messagebox.showerror('错误','表达式错误')
            return 
    elif btn=='cos':
         n=content.split('.')#从.处分割存入n，n是一个列表
         if all(map(lambda x:x.isdigit(),n)):
            content=math.sin(float(content)*math.pi/180)
         else:
            tkinter.messagebox.showerror('错误','表达式错误')
            return 
    elif btn=='tan':
         n=content.split('.')#从.处分割存入n，n是一个列表
         if all(map(lambda x:x.isdigit(),n)):
            content=math.sin(float(content)*math.pi/180)
         else:
            tkinter.messagebox.showerror('错误','表达式错误')
            return 

    elif btn=='a^2':
         n=content.split('.')#从.处分割存入n，n是一个列表
         if all(map(lambda x:x.isdigit(),n)):#如果列表中所有的都是数字，检查表达式是不是正确的
             content=eval(content)**2
         else:
             tkinter.messagebox.showerror('错误','表达式错误')
             return
    elif btn=='log10':
          n=content.split('.')#从.处分割存入n，n是一个列表
          if all(map(lambda x:x.isdigit(),n)):#如果列表中所有的都是数字，检查表达式是不是正确的
              content=math.log(float(content))
          else:
              tkinter.messagebox.showerror('错误','表达式错误')
              return
    elif btn=='ln':
          n=content.split('.')#从.处分割存入n，n是一个列表
          if all(map(lambda x:x.isdigit(),n)):#如果列表中所有的都是数字，检查表达式是不是正确的
              content=math.log(float(content),math.e)
          else:
              tkinter.messagebox.showerror('错误','表达式错误')
              return
    elif btn=='Sqrt':
        n=content.split('.')#从.处分割存入n，n是一个列表
        if all(map(lambda x:x.isdigit(),n)):#如果列表中所有的都是数字，检查表达式是不是正确的
            content=eval(content)**0.5
        else:
            tkinter.messagebox.showerror('错误','表达式错误')
            return
    contentVar.set(content)#将结果显示到文本框中
 




root=tkinter.Tk()


root.geometry('300x300+400+100')#指定主框体大小

root.resizable(False,False)#框体大小可调性，分别表示x,y方向的可变性；
#设置窗口标题
root.title('standard calculator')
 


contentVar=tkinter.StringVar(root,'')#自动刷新的字符串变量，可用set和get方法进行传值和取值
contentEntry=tkinter.Entry(root,textvariable=contentVar)#将文本框中的内容存在contentVar中
contentEntry['state']='readonly'#文本框只能读，不能写
contentEntry.place(x=10,y=10,width=280,height=20)#文本框在root主界面的xy坐标位置，以及文本框自生的宽和高

#放置清除按钮和等号按钮
btnClear=tkinter.Button(root,text='C',bg = 'red',command=lambda:buttonClik('C'))
btnClear.place(x=40,y=40,width=60,height=20)
btnCompute=tkinter.Button(root,text='=',bg = 'yellow',command=lambda :buttonClik('='))
btnCompute.place(x=130,y=40,width=60,height=20)
 
#放置切换按钮
btnSwitch=tkinter.Button(root,text='switch',command=lambda:root.destroy())
btnSwitch.place(x=230,y=40,width=50,height=20)
#放置10个数字、小数点的按钮
digits=list('123456789 0.')#序列中的每个元素都分配一个数字 - 它的位置，或索引，第一个索引是0，第二个索引是1，依此类推。
index=0
for row in range(4):
    for col in range(3):
        d=digits[index]#按索引从list中取值
        index+=1
        btnDigit=tkinter.Button(root,text=d,command=lambda x=d:buttonClik(x))
        btnDigit.place(x=20+col*70,y=80+row*50,width=50,height=20)
#放置运算符按钮
operators=('+','-','*','/')
#enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。
for index,operator in enumerate(operators):
    btnOperator=tkinter.Button(root,text=operator,bg = 'orange',command=lambda x=operator:buttonClik(x))#创建的过程和上面类似
    btnOperator.place(x=230,y=80+index*50,width=50,height=20)
 
root.mainloop()#进入消息循环


top=tkinter.Tk()


top.geometry('300x330+400+100')#指定主框体大小

top.resizable(False,False)#框体大小可调性，分别表示x,y方向的可变性；
#设置窗口标题
top.title('scientific calculator')
 

contentVar=tkinter.StringVar(top,'')
contentEntry=tkinter.Entry(top,textvariable=contentVar)
contentEntry['state']='readonly'
contentEntry.place(x=10,y=10,width=280,height=20)

#放置清除按钮和等号按钮
btnClear=tkinter.Button(top,text='C',bg = 'red',command=lambda:buttonClik('C'))
btnClear.place(x=40,y=40,width=60,height=20)
btnCompute=tkinter.Button(top,text='=',bg = 'yellow',command=lambda :buttonClik('='))
btnCompute.place(x=130,y=40,width=60,height=20)
 
#放置切换按钮
btnSwitch=tkinter.Button(top,text='quit',command=lambda:top.destroy())
btnSwitch.place(x=230,y=40,width=50,height=20)
 
#放置10个数字、小数点和计算平方根的按钮
digits=list('123456789 0. ')
index=0
for row in range(4):
    for col in range(3):
        d=digits[index]
        index+=1
        btnDigit=tkinter.Button(top,text=d,command=lambda x=d:buttonClik(x))
        btnDigit.place(x=20+col*70,y=80+row*50,width=50,height=20)
#放置运算符按钮
operators=('+','-','*','/','**','%')
for index,operator in enumerate(operators):      
    btnOperator=tkinter.Button(top,text=operator,bg = 'orange',command=lambda x=operator:buttonClik(x))#创建的过程和上面类似
    btnOperator.place(x=230,y=80+index*30,width=50,height=20)
 
soperators=('sin','cos','tan','Sqrt' )
for index,soperator in enumerate(soperators):
    btnSoperator=tkinter.Button(top,text=soperator,bg='orange',command=lambda x=soperator:buttonClik(x))
    btnSoperator.place(x=20+index*70,y=265,width=50,height=20)
soperators2=('log10','ln','a^2','a!' )
for index,soperator2 in enumerate(soperators2):
    btnSoperator2=tkinter.Button(top,text=soperator2,bg='orange',command=lambda x=soperator2:buttonClik(x))
    btnSoperator2.place(x=20+index*70,y=295,width=50,height=20)
top.mainloop()#进入消息循环
